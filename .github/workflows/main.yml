name: AWS EC2 INSTANCE CI/CD 
######### master branch에 push 되었을때만 실행#########
on: 
  push:            
    branches: main
    
######### master branch에 push 되었을때만 실행#########

jobs:
  build: # job 이름 : build
    runs-on: ubuntu-latest # runner 운영체제
    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            pwd
      ## create application.yml
      - uses: actions/checkout@v3
      - run: touch ./src/main/resources/application.yml
      - run: echo "${{ secrets.PROPERTIES }}" > ./src/main/resources/application.yml
      - run: cat ./src/main/resources/application.yml
        
      ## gradle build
      - name: Build with Gradle
        run: ./gradlew build -x test
        
      ## docker build & push to production
      - name: Docker build & push to prod
        if: contains(github.ref, 'main')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_REPO }}
      
      ## docker-compose.yml 서버에 이동
      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.USERNAME }}"
    
     ## deploy to develop
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            pwd
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker-compose down -v
            sudo docker rm -f $(docker ps -qa)
            sudo docker-compose pull
            sudo docker-compose up -d
